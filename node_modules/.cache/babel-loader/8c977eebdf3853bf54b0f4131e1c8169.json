{"ast":null,"code":"import _defineProperty from \"/home/micessien/Documents/PROJECT/REACT/React-Custom-Hooks-Form-Validation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/micessien/Documents/PROJECT/REACT/React-Custom-Hooks-Form-Validation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/micessien/Documents/PROJECT/REACT/React-Custom-Hooks-Form-Validation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from \"react\";\n\nvar useForm = function useForm(callback, validate, formValues) {\n  // console.log(formValues);\n  var _useState = useState(formValues),\n      _useState2 = _slicedToArray(_useState, 2),\n      values = _useState2[0],\n      setValues = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errors = _useState4[0],\n      setErrors = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isSubmitting = _useState6[0],\n      setIsSubmitting = _useState6[1];\n\n  var handleChange = function handleChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setValues(_objectSpread({}, values, _defineProperty({}, name, value)));\n  };\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  useEffect(function () {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback(); // clear form after send\n\n      clear(formValues);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [errors, isSubmitting]); // Clear form input by return initial value\n\n  var clear = function clear(formValues) {\n    setValues(formValues);\n  };\n\n  return {\n    handleChange: handleChange,\n    handleSubmit: handleSubmit,\n    values: values,\n    errors: errors\n  };\n};\n\nexport default useForm;","map":{"version":3,"sources":["/home/micessien/Documents/PROJECT/REACT/React-Custom-Hooks-Form-Validation/src/useForm.js"],"names":["useState","useEffect","useForm","callback","validate","formValues","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","event","target","name","value","handleSubmit","preventDefault","Object","keys","length","clear"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,QAAD,EAAWC,QAAX,EAAqBC,UAArB,EAAoC;AAClD;AADkD,kBAEtBL,QAAQ,CAACK,UAAD,CAFc;AAAA;AAAA,MAE3CC,MAF2C;AAAA,MAEnCC,SAFmC;;AAAA,mBAGtBP,QAAQ,CAAC,EAAD,CAHc;AAAA;AAAA,MAG3CQ,MAH2C;AAAA,MAGnCC,SAHmC;;AAAA,mBAIVT,QAAQ,CAAC,KAAD,CAJE;AAAA;AAAA,MAI3CU,YAJ2C;AAAA,MAI7BC,eAJ6B;;AAMlD,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAAA,wBACJA,KAAK,CAACC,MADF;AAAA,QACpBC,IADoB,iBACpBA,IADoB;AAAA,QACdC,KADc,iBACdA,KADc;AAE5BT,IAAAA,SAAS,mBACJD,MADI,sBAENS,IAFM,EAECC,KAFD,GAAT;AAID,GAND;;AAQA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAJ,KAAK,EAAI;AAC5BA,IAAAA,KAAK,CAACK,cAAN;AACAT,IAAAA,SAAS,CAACL,QAAQ,CAACE,MAAD,CAAT,CAAT;AACAK,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAJD;;AAMAV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIkB,MAAM,CAACC,IAAP,CAAYZ,MAAZ,EAAoBa,MAApB,KAA+B,CAA/B,IAAoCX,YAAxC,EAAsD;AACpDP,MAAAA,QAAQ,GAD4C,CAEpD;;AACAmB,MAAAA,KAAK,CAACjB,UAAD,CAAL;AACD,KALa,CAMd;;AACD,GAPQ,EAON,CAACG,MAAD,EAASE,YAAT,CAPM,CAAT,CApBkD,CA6BlD;;AACA,MAAMY,KAAK,GAAG,SAARA,KAAQ,CAAAjB,UAAU,EAAI;AAC1BE,IAAAA,SAAS,CAACF,UAAD,CAAT;AACD,GAFD;;AAIA,SAAO;AACLO,IAAAA,YAAY,EAAZA,YADK;AAELK,IAAAA,YAAY,EAAZA,YAFK;AAGLX,IAAAA,MAAM,EAANA,MAHK;AAILE,IAAAA,MAAM,EAANA;AAJK,GAAP;AAMD,CAxCD;;AA0CA,eAAeN,OAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useForm = (callback, validate, formValues) => {\n  // console.log(formValues);\n  const [values, setValues] = useState(formValues);\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n      // clear form after send\n      clear(formValues);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [errors, isSubmitting]);\n\n  // Clear form input by return initial value\n  const clear = formValues => {\n    setValues(formValues);\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors\n  };\n};\n\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}